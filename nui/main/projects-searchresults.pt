<html metal:use-macro="here/@@standard_macros/master">
  <body>

    <div metal:fill-slot="content">              

      <div class="oc-headingBlock">
        <h1>Projects on OpenPlans</h1>
        <p class="oc-headingContext">Currently serving <span tal:replace="view/nprojects"/> projects</p>
      </div>
      
      <div id="oc-content-main">

        <div class="oc-searchresults">
          <h2>Search results <span tal:condition="view/search_query | nothing" tal:replace="structure view/search_query" /></h2>

          <!-- batch needs to have some variables set up to work properly.
               here is where they are defined -->
          <tal:got_results condition="view/search_results"
                           define="batch view/search_results;
                                   batch_base_url request/ACTUAL_URL;
                                   start batch/start | nothing;
                                   end batch/end | nothing;
                                   sequence_length batch/sequence_length | nothing;
                                   ">

            <!-- display the number of results that came back -->
            <div class="oc-searchresults-nresults" tal:define="many python: start!=end">
              <!-- pagination uses the batch macro -->
              <div metal:use-macro="context/@@batch_macros/pagination"/>
              Result<tal:plural condition="many">s</tal:plural> <span tal:replace="start">1</span>
              <tal:justone condition="many">&ndash; <span tal:replace="end">10</span></tal:justone> 
              of <span tal:replace="sequence_length">376</span> sorted by

              <!-- when sorting, we post the action to distinguish between searching
                   this was necessary because the batch macro reposts the request data, and we see problems
                   when trying to reset to page when the sorting changes -->
              <form name="projects_sort" method="POST" action="." tal:attributes="action string:${context/portal_url}/projects/searchresults">
                <select name="sort_by" tal:define="sorted_by python: request.get('sort_by')">
                  <option value="relevancy" tal:attributes="selected python: sorted_by == 'relevancy'">relevancy</option>
                  <option value="modified" tal:attributes="selected python: sorted_by == 'modified'">date updated</option>
                  <option value="created" tal:attributes="selected python: sorted_by == 'created'">date created</option>
                  <option value="Title" tal:attributes="selected python: sorted_by == 'Title'">project name</option>
                  <option value="Creator" tal:attributes="selected python: sorted_by == 'Creator'">member name</option>
                </select>

		<!-- resend the current data when sorting -->
                <input tal:condition="request/projname | nothing" type="hidden" name="projname"
                       tal:attributes="value request/projname" />

                <input tal:condition="request/letter_search | nothing" type="hidden" name="letter_search"
                       tal:attributes="value request/letter_search" />
                <input tal:condition="request/b_start | nothing" type="hidden" name="b_start:int"
                       tal:attributes="value request/b_start" />
                <input type="submit" name="action_sort_projects" value="sort" />

              </form>
            </div>

            <!-- the results are displayed here -->
            <ol class="oc-searchresults-list">
              <li class="oc-searchresults-item" tal:repeat="item view/search_results">
                <h3><a href="" tal:attributes="href string:${context/portal_url}/projects/${item/getId}" tal:content="item/Title">Project Title</a></h3>

                <span class="oc-discreetText" tal:define="sorting_by request/sort_by | nothing">

                  <tal:not-modified-block condition="python: sorting_by != 'modified'">
                    created by
                    <a tal:define="userid item/Creator" tal:attributes="href string:${context/portal_url}/people/${userid}" tal:content="userid" />,
                    <span tal:content="python: view.pretty_date(item.CreationDate)" />
                  </tal:not-modified-block>

                  <tal:modified-block tal:condition="python: sorting_by == 'modified'">
                    <tal:has_updated_text define="userid item/lastModifiedAuthor" condition="userid">
                      last updated by
                      <a tal:attributes="href string:${context/portal_url}/people/${userid}" tal:content="userid" />,
                    <span tal:content="python: view.pretty_date(item.ModificationDate)" />
                    </tal:has_updated_text>
                  </tal:modified-block>

                </span>

                <p tal:define="desc item/Description">
                  <span tal:condition="desc" tal:replace="desc" />
                  <span tal:condition="not: desc" tal:replace="string:no mission statement (project description)" />
                </p>

              </li>
            </ol>
            <div class="oc-searchresults-nresults" tal:define="many python: start!=end">
              <!-- we put pagination on the bottom of the page too -->
              <div metal:use-macro="context/@@batch_macros/pagination"/>
              Result<tal:plural condition="many">s</tal:plural> <span tal:replace="start">1</span>
              <tal:justone condition="many">&ndash; <span tal:replace="end">10</span></tal:justone> 
              of <span tal:replace="sequence_length">376</span> </div>

          </tal:got_results>

          <!-- if we get no results, this is what is displayed -->
          <div tal:condition="not: view/search_results">No results found.</div>

        </div> <!-- oc-searchresults -->
      </div> <!-- content-main -->
      
      
      <div id="oc-content-sidebar">

        <!-- the sidebar contains the search for the project, as well as the letters that search for projects
             starting with that letter
             we can possibly create a macro that displays this form and letters generically -->
        <div class="oc-widget oc-widget-search oc-boxy">    
          <form name="projects_search" action="." tal:attributes="action string:${context/portal_url}/projects/searchresults">
            <label><h2>New search</h2></label>
            <input type="text" name="projname" tal:attributes="value request/projname | nothing" />
            <input type="hidden" name="letter_search" />
            <input type="submit" name="action_search_projects" value="Search" />
          </form>
          
          <ul class="oc-widget-alphabet oc-boxy" tal>
            <li tal:repeat="letter modules/string/uppercase">
              <a href="" tal:content="letter" tal:attributes="href string:${request/ACTUAL_URL}?letter_search=${letter}">A</a>
            </li>
          </ul>
        </div>

      </div><!-- content-sidebar -->

    </div><!-- content-fill-slot -->

  </body>
</html>
