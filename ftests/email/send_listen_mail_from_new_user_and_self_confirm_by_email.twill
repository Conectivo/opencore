# Expected local variables:
#  mailname: the filename of the mail to send
#  sender_email: the full email address of the sender
#  subject: the text of the email's subject
#  list_id: the list id that we are sending to
#  projname: the project id that the list belongs to
# Expected global variables:
#  outbox_url
#  base_url
#  maildir
# Expected conditions:
#  sender_email is not yet an allowed sender on list_id
#  The currently logged-in user can view list_id

# First let's reset the outbox
go ${outbox_url}/drain
find "ok"
go ${outbox_url}/messages.html
find "<h1>0 messages</h1>"

# Now we'll send a mail
extend_with flunc.mail
send_mail $maildir $mailname $base_url

# The user who sent the email should get a confirmation email,
# and the moderator should get a moderation email.
# Let's confirm that both of those mails (and no others)
# were sent out.
go ${outbox_url}/messages.html
find "<h1>2 messages</h1>"
extend_with flunc.xpath
find_in_css "Email confirmation" "span.subject"
find_in_css "Post requiring moderation" "span.subject"

# Let's open the confirmation-challenge email in the outbox.
# We'll confirm that it was sent to the original sender.
# Then we will reply to it with a confirmation email.
follow "Email confirmation"
find_in_css $sender_email "span.to"
follow "text/plain"
reply "please confirm me"

# Now that we've confirmed, the original message should
# be sent out to the list's subscribers.
go ${outbox_url}/messages.html
find "<h1>3 messages</h1>"
follow $subject
find_in_css $sender_email "span.from"
follow "text/plain"
find $subject

# It should also appear in the list's web archive.
go ${base_url}/projects/${projname}/lists/${list_id}/archive
find $subject
