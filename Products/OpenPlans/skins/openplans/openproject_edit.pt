<metal:js define-macro="javascript_head"
          tal:define="add_view exists:view/object_stub;">
    <!-- Some base styles -->
    <style type="text/css"
           tal:condition="add_view">
            #archetypes-fieldname-space_teams { margin-left: 3em; }
    </style>
    <style type="text/css"
           tal:condition="not:add_view">
            #TeamAssignment { display: none; }
    </style>

    <script type="text/javascript"
            tal:condition="add_view">
      <!--
      function hideTeams(ev) {
            var teams = document.getElementById('archetypes-fieldname-space_teams');
            teams.style.display = 'none';
      }
      function showTeams(ev) {
            var teams = document.getElementById('archetypes-fieldname-space_teams');
            teams.style.display = 'block';
      }
      function setupProjectAdd(ev) {
            var no_teams = document.getElementById('team-assignment1');
            var yes_teams = document.getElementById('team-assignment2');
            var teams = document.getElementById('archetypes-fieldname-space_teams');
            if (no_teams.checked) {
                teams.style.display = 'none';
            }
            registerEventListener(no_teams, "click", hideTeams);
            registerEventListener(yes_teams, "click", showTeams);
      }
      registerPloneFunction(setupProjectAdd);
      -->
    </script>

    <script type="text/javascript"
            src="flet_confirm.js"
            tal:condition="not:add_view">
    </script>

</metal:js>

<metal:body define-macro="body"
            tal:define="edit_macros here/portal_skins/archetypes/edit_macros/macros">
  <div metal:use-macro="edit_macros/body">
    <metal:block fill-slot="extra_bottom">
      <metal:define define-macro="extra_bottom">

        <div metal:use-macro="here/flet_project_widget/macros/flet_widget" />

        <div class="field"
             id="WorkflowPolicy"
             tal:define="obj_context nocall:view/object_stub|nocall:context;
                         policy_info obj_context/@@policy_support;
                         vocab policy_info/getAvailablePolicies;
                         cur_policy policy_info/getCurrentPolicyId"
             tal:condition="python: fieldsets.index(fieldset) &gt;= len(fieldsets) - 1">
          <label i18n:translate="label_workflow_policy">Security Policy</label>
          <span class="fieldRequired"
                title="Required"
                i18n:translate="label_required"
                i18n:attributes="title title_required;">
            (Required)
          </span>
          <div class="formHelp"
               id="workflow_policy_help"
               i18n:translate="help_workflow_policy">
            The security policy of your project determines who can edit and read content in the product.
          </div>
          <div id="WFPolicyList">
            <tal:radios repeat="item vocab">

              <input class="noborder"
                     tabindex=""
                     name="workflow_policy"
                     type="radio"
                     tal:define="tabindex tabindex/next;
                                 id item/id;
                                 cur_val request/workflow_policy|nothing;
                                 global iter tabindex"
                     tal:attributes="id string:workflow_policy_${tabindex};
                                     checked python:id == (cur_val or cur_policy);
                                     value id;
                                     tabindex tabindex;"
                     />

              <label tal:content="item/title"
                     tal:attributes="for string:workflow_policy_${iter};"
                     i18n:translate="" />
              <div class="formHelp"
                   tal:content="item/description"
                   i18n:translate="" />

            </tal:radios>
          </div>
          <br />
        </div>
      </metal:define>
    </metal:block>
  </div>
</metal:body>
