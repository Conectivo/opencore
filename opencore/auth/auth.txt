Test for Cookie Auth
====================

  >>> import hmac
  >>> import sha
  >>> import base64
  >>> from urllib import quote
  >>> from zope.interface import implementedBy
  >>> from Interface.Implements import flattenInterfaces
  >>> from Products.PloneTestCase.PloneTestCase import portal_name

Make sure cookie plugin is installed and activated.

  >>> uf = self.portal.acl_users

  >>> uf.objectIds('Signed Cookie Auth Helper')
  ['credentials_signed_cookie_auth']

  >>> plugins = uf.plugins
  >>> cookie = uf['credentials_signed_cookie_auth']

Create a user

  >>> user_name, user_password, user_role = ('baz', 'bar', 'Manager')
  >>> uf.userFolderAddUser(user_name, user_password, [user_role], [])

  >>> uf.getUserById(user_name)
  <MembraneUser 'baz'>

Login to Plone site using Signed Cookie Auth should work too.

  >>> cookie = uf['credentials_signed_cookie_auth']

  >>> auth = hmac.new(cookie.secret, user_name + user_password, sha).hexdigest()
  >>> encoded = base64.encodestring('%s:%s:%s' % (user_name, user_password, auth))
  >>> print base64.encodestring('%s:%s:%s' % (user_name, user_password, auth))
  YmF6OmJhcjoyZmRiNGI2N2ZkNDMwZGU3ODA2OTUxYWRkZGRhZWZjZGNiMGMwZGIw
  ...

The cookie set by PlonePAS should be URL-quoted.

  >>> print http(r"""
  ... GET /%s/logged_in HTTP/1.1
  ... Cookie: __ac=%s
  ... """ % (portal_name, quote(encoded)), handle_errors=False)
  HTTP/1.1 200 OK
  ...
  Set-Cookie: __ac="OjoyNWFmNjE3NGEwZmNlY2M0ZDM0NjY4MGE3MmI3Y2U2NDRiOWE4OGU4"; Path=/...

Bad cookies should be rejected
  >>> bad = base64.encodestring('%s:%s:%s' % (user_name, user_password, 'bogusauth'))
  >>> print http(r"""
  ... GET /%s/logged_in HTTP/1.1
  ... Cookie: __ac=%s
  ... """ % (portal_name, quote(bad)), handle_errors=False)
  HTTP/1.1 200 OK
  ...
  Set-Cookie: __ac="deleted";...

