<tal:vars tal:define="attachments view/fileAttachments;
                      Iterator python:modules['Products.CMFPlone'].IndexIterator;
                      lockable python:hasattr(here, 'wl_isLocked');
                      errors view/errors;
                      isLocked python:lockable and here.wl_isLocked();
                      member python:here.portal_membership.getAuthenticatedMember();
                      portal python:context.portal_url.getPortalObject();
                      portal_url here/portal_url;
                      tabindex python:Iterator(pos=7000);
                      ">

<html metal:use-macro="here/@@standard_macros/master">
  <head>
    <title metal:fill-slot="title" tal:content="python:view.wiki_window_title(mode='edit')" />
    <metal:link-slot metal:fill-slot="link">
<link type="text/css" rel="stylesheet" title="blue-look" href="/++resource++xinha/skins/blue-look/skin.css"/>
<link type="text/css" rel="alternate stylesheet" title="green-look" href="/++resource++xinha/skins/green-look/skin.css"/>
<link type="text/css" rel="alternate stylesheet" title="xp-blue" href="/++resource++xinha/skins/xp-blue/skin.css"/>
<link type="text/css" rel="alternate stylesheet" title="xp-green" href="/++resource++xinha/skins/xp-green/skin.css"/>
<link type="text/css" rel="alternate stylesheet" title="inditreuse" href="/++resource++xinha/skins/inditreuse/skin.css"/>
<link type="text/css" rel="alternate stylesheet" title="blue-metallic" href="/++resource++xinha/skins/blue-metallic/skin.css"/>
    </metal:link-slot>
    <metal:script-slot metal:fill-slot="script">
<!-- xinha code below  -->
<script type="text/javascript">
/************************************************************************
 * Please refer to http://xinha.python-hosting.com/wiki/NewbieGuide
 ************************************************************************
 * You must set _editor_url to the URL (including trailing slash) where
 * where xinha is installed, it's highly recommended to use an absolute URL
 *  eg: _editor_url = "/path/to/xinha/";
 * You may try a relative URL if you wish]
 *  eg: _editor_url = "../";  
 * in this example we do a little regular expression to find the absolute path.
 ************************************************************************/
var _editor_url = '/++resource++xinha/'; //document.location.href.replace(/examples\/simple_example\.html.*/, '')
// And the language we need to use in the editor.
var _editor_lang = "en";
</script>
<!-- Load up the actual editor core -->
<script type="text/javascript" src="/++resource++xinha/XinhaCore.js"></script>
<script type="text/javascript">
/************************************************************************
 * Plugins you will be using in the editors on this page.
 * List all the plugins you will need, even if not all the editors will
 * use all the plugins.
 ************************************************************************
 * Please refer to http://xinha.python-hosting.com/wiki/Plugins for the
 * list of availables plugins
 ************************************************************************/
var xinha_plugins =
[
/*
 'CharacterMap',
 'ContextMenu',
 'FullScreen',
 'ListType',
 'SpellChecker',
 'Stylist',
 'SuperClean',
 'TableOperations'
*/
];
/************************************************************************
 * Names of the textareas you will be turning into editors
 ************************************************************************/
var xinha_editors =
[
  'text'
];
/************************************************************************
 * Initialisation function
 ************************************************************************/
function xinha_init()
{
  // THIS BIT OF JAVASCRIPT LOADS THE PLUGINS, NO TOUCHING  :)
  //if(!Xinha.loadPlugins(xinha_plugins, xinha_init)) return;
  if(xinha_plugins.length) {
    if(Xinha.loadPlugins(xinha_plugins, xinha_init))
      alert('successfully loaded plugins');
    else {
      alert('failed to load plugins');
      return;
    }
  }
  /*************************************************************************
   * We create a default configuration to be used by all the editors.
   * If you wish to configure some of the editors differently this will be
   * done later after editors are initiated.
   ************************************************************************
   * Please refer to http://xinha.python-hosting.com/wiki/Documentation/Customise
   * for the configuration parameters
   ************************************************************************/
  var xinha_config = new Xinha.Config();
  /************************************************************************
   * We first create editors for the textareas.
   * You can do this in two ways, either
   *
   *   xinha_editors   = Xinha.makeEditors(xinha_editors, xinha_config, xinha_plugins);
   *
   * if you want all the editor objects to use the same set of plugins, OR;
   *
   *   xinha_editors = Xinha.makeEditors(xinha_editors, xinha_config);
   *   xinha_editors['myTextArea'].registerPlugins(['Stylist','FullScreen']);
   *   xinha_editors['anotherOne'].registerPlugins(['CSS','SuperClean']);
   *
   * if you want to use a different set of plugins for one or more of the
   * editors.
   ************************************************************************/
  xinha_editors = Xinha.makeEditors(xinha_editors, xinha_config, xinha_plugins);
  /************************************************************************
   * If you want to change the configuration variables of any of the
   * editors,  this is the place to do that, for example you might want to
   * change the width and height of one of the editors, like this...
   ************************************************************************/
  xinha_editors.text.config.width = '640px';
  xinha_editors.text.config.height = '480px';
  /************************************************************************
   * Or remove the statusbar on the other one, like this...
   * For every possible configuration, please refer to
   * http://xinha.python-hosting.com/wiki/Documentation/ConfigVariablesList
   ************************************************************************/
  //xinha_editors.anotherOne.config.statusBar = false;
  /************************************************************************
   * Finally we "start" the editors, this turns the textareas into
   * Xinha editors.
   ************************************************************************/
  Xinha.startEditors(xinha_editors);
}
window.onload = xinha_init;
</script>
    </metal:script-slot>
  </head>
  <body>
    <div metal:fill-slot="content">

      <div id="oc-content-main" class="oc-content-main-fullWidth">

        <div class="oc-wiki">

          <form name="edit_form"
            method="post"
            enctype="multipart/form-data"
            class="enableUnloadProtection"
            tal:attributes="action string:${here/absolute_url}/edit">
            
              <ul class="oc-headingBlock oc-wiki-headingBlock oc-bcrumb">
                <li class="oc-js-liveEdit">
                  <div class="oc-js-liveEdit-value"
                       tal:define="title context/Title">
                    <h1 tal:condition="title" class="oc-bcrumb-current" tal:content="title" />
                    <h1 tal:condition="not: title" class="oc-bcrumb-current" tal:content="context/id" />
                    &nbsp;<a href="#" class="oc-js-liveEdit_showForm oc-actionLink">RENAME</a>
                  </div>
                  <div class="oc-js-liveEdit-editForm oc-liveEdit-editForm">
                    <input name="title" type="text" tal:attributes="value string:${context/Title}" /> 
                    <!--<a href="#" class="oc-js-liveEdit_hideForm">Cancel</a>-->
                  </div>
                </li>
              </ul>

            <div metal:use-macro="here/@@wiki_macros/tabs"/>

            <div class="oc-wiki-edit" >

              <div class="oc-wiki-edit-content">
                <input type="hidden" name="submitted" value="1"/>

                <tal:comment replace="nothing">
                  News items get an extra description field
                </tal:comment>
                <tal:description
                  define="news_interface python:modules['opencore.interfaces'].INewsItem"
                  condition="python:news_interface.providedBy(context)">
                  <label for="description">Description</label>
                  <textarea id="description" name="description"></textarea>
                </tal:description>

                <textarea id="text" name="text" tal:content="context/getText"></textarea>
              </div><!-- end .oc-wiki-edit-content" --> 
 
              <div class="oc-js-expander oc-expander">
                <h2 class="oc-bigText"><a href="#oc-wiki-comment" class="oc-js-expander_open oc-expanderLink">Revision note</a></h2>
                <!--<a href="#" class="oc-js-expander_close oc-expander-close" style="display:none;">X</a>-->
                <div class="oc-js-expander-content">
                  <textarea name="comment" id="comment" rows="3" cols="60"></textarea>
                </div><!-- end expander-content -->
              </div><!-- end expander -->
              
            <div class="oc-js-expander oc-expander">
              <h2 class="oc-bigText"><a href="#oc-wiki-manageAttachments" class="oc-js-expander_open oc-expanderLink">Manage attachments</a></h2>

              <div class="oc-js-expander-content">
                
                  <h3>Current attachments:</h3>
                  <ol class="oc-attachments" id="oc-wiki-attachments">
                      <tal:repeat repeat="attachment attachments">
                        <tal:macro metal:use-macro="view/attachment_snippet/macros/attachment" />
                      </tal:repeat>
                  </ol>
                
  
                <fieldset>
                  <legend class="oc-legend-heading oc-bigText">Upload a new file:</legend>
                  <input type="hidden" name="oc-target" value="oc-wiki-attachments" />
  
                  <table class="oc-form">
                    <thead></thead>
                    <tbody>
                      <tr class="oc-form-row">
                        <th class="oc-form-label"><label for="attachmentFile">Locate file</label></th>
                        <td class="oc-form-value"><input type="file"           
                            id="attachmentFile"
                            name="attachmentFile"
                            size="30" 
                            tabindex="" 
                            tal:attributes="tabindex tabindex/next;
                            value request/attachmentFile/filename | nothing"
                            /></td>
                        <td class="oc-form-help"></td>
                      </tr>
                      <tr class="oc-table-row">
                        <th class="oc-form-label"><label for="attachmentTitle">Title</label></th>
                        <td class="oc-form-value"><input type="text" 
                            id="attachmentTitle" 
                            name="attachmentTitle" 
                            size="30" 
                            tabindex=""
                            tal:attributes="tabindex tabindex/next;"
                            value=""/></td>
                        <td class="oc-form-help">
                          <span class="oc-form-context">(optional)</span>
                          <span class="oc-table-validator"></span>
                        </td>
                      </tr>
                      <tr class="oc-options">
                        <th class="oc-form-label"></th>
                        <td class="oc-form-value">  
                          <span class="oc-indicator" id="indicator|upload-attachment"><img src="++resource++img/indicator-bounce-eee.gif" alt="Loading..." /></span> 
                          <input type="submit" name="task|upload-attachment" class="oc-js-actionButton" value="Upload" /> or <a href="#" class="oc-js-expander_close">Cancel</a></td>
                        <td class="oc-form-help"></td>
                      </tr>
                    </tbody>
                  </table>
                </fieldset>
  
              </div><!-- end expander-content -->
            </div><!-- end expander -->
            
              <ul class="oc-actions oc-wiki-actions">
                <li><input type="submit" name="task|save" value="Save" class="oc-button oc-chooseThis" /></li>
                <li>or <a href="" tal:attributes="href context/absolute_url">Cancel</a></li>
              </ul>  
              
            </div><!-- end .oc-wiki-edit -->

          </form>
        </div><!-- end .oc-wiki -->

      </div><!-- end #oc-content-main -->        
    </div><!-- end content slot -->
  </body>
</html>

</tal:vars>
