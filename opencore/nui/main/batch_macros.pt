<html xmlns:tal="http://xml.zope.org/namespaces/tal"
  xmlns:metal="http://xml.zope.org/namespaces/metal"
  i18n:domain="opencore">
  <body>
    <!-- Navigation -->

    <metal:macro define-macro="pagination"
	 tal:define="mq python:modules['ZTUtils'].make_query;
		     url request/getURL;"
	 tal:condition="python: batch.next or batch.previous">
      
      <ul class="oc-paginator" tal:define="cur_page view/page">
	
	<!-- Link to previous -->
        <li tal:define="p batch/previous | nothing"
          tal:condition="p">
          <a tal:attributes="href python: '%s?%s' % (url , mq( request.form, {'page':cur_page-1} ));">
            &larr;
            <tal:i18n i18n:translate="batch_macros_previous_x_items">Prev</tal:i18n>
          </a>
        </li>

        <li i18n:translate="batch_macros_page">Page</li>

        <!-- Link to first -->
        <li tal:condition="python: 1 not in batch.navlist">
          <a tal:attributes="href python: '%s?%s' % (url, mq(request.form, {'page':1} ));" >1</a>
          <span tal:condition="python: 2 not in (batch.prevlist or batch.leapback)"
            tal:omit-tag="">
            ...
          </span>
        </li>

        <!-- Pagelist with links to previous pages for quick navigation -->
        <li tal:repeat="linklist python:batch.prevurls(request.form)"
          tal:condition="batch/prevlist">
          <a tal:define="page python:linklist[0];
			 query python:mq(request.form, {'page':page});"
            tal:content="page"
            tal:attributes="href python: '%s?%s' % (url,query)" >
          </a>
        </li>

        <!-- Current page -->
        <li tal:condition="batch/navlist" tal:content="batch/pagenumber" />

        <!-- Pagelist with links to next pages for quick navigation -->
        <li tal:repeat="linklist python:batch.nexturls(request.form)"
          tal:condition="batch/nextlist">
          <a tal:define="page python:linklist[0];
			 query python:mq(request.form, {'page':page});"
            tal:content="page"
            tal:attributes="href python: '%s?%s' % (url,query)" >
          </a>
        </li>

        <!-- Link to last -->
        <li tal:condition="python:batch.numpages not in batch.navlist">
          <span tal:condition="python: batch.numpages - 1 not in (batch.nextlist or batch.leapforward)"
		>
            ...
          </span>
          <a tal:attributes="href python: '%s?%s' % (url,mq(request.form, {'page':batch.numpages}));"
             tal:content="batch/numpages" />
        </li>

        <li tal:define="n batch/next | nothing"
          tal:condition="n">
          <a tal:attributes="href python: '%s?%s' % (url , mq( request.form, {'page':cur_page+1} ))">
            <span i18n:translate="batch_macros_next_x_items" tal:omit-tag="">Next</span>
            &rarr;
          </a>
        </li>

	<li>
	  <tal:i18n i18n:translate="batch_macros_jump_to_page">or jump to</tal:i18n>
	  <form method="GET">
	    <tal:for repeat="key request/form">
	      <input type="hidden"
		     tal:condition="python:key!='page'"
		     tal:attributes="name key; value python:request.form[key]" />
	    </tal:for>
            <input size="3" type="text" name="page" />
	  </form>
	  
	</li>
	
      </ul>
    </metal:macro>


    <metal:macro define-macro="sort_string">
      <span tal:replace="structure python: view.sort_widget_string(batch)" />
    </metal:macro>

    <metal:macro define-macro="sort_widget">

      <form name="searchresults_sorting" tal:attributes="action view/name">

        <!-- FIXME This should not require a button to work. -->
        <select name="sort_by" class="oc-js-autoSelect" tal:define="sorted_by view/sort_by">

	  <tal:for repeat="sort_by_option view/sort_by_options">
	    <option tal:define="sort_string python:sort_by_option[1]"
		    tal:attributes="value python:sort_by_option[0];
				    selected python:sorted_by == sort_by_option[0]"
		    tal:content="sort_string" />
	  </tal:for>
        </select>

      <!-- resend the current data when sorting -->
      <tal:for repeat="key request/form">
	<input type="hidden"
	       tal:condition="python:key!='sort_by'"
	       tal:attributes="name key; value python:request.form[key]" />
      </tal:for>


        <button i18n:translate="batch_macros_sort" type="submit" class="oc-button oc-chooseThis">sort</button> 

      </form>
      
    </metal:macro>

  </body>
</html>
