-*- mode: doctest ;-*-

(TODO: need a better integration test for reindex_membership_project_ids()
 here.  but setting that up with reasonable isolation is more effort
 than I have time for now.  For now, just make sure it doesn't
 explode.)

  >>> self.loginAsPortalOwner()
  >>> from opencore.member.subscribers import reindex_membership_project_ids
  >>> mship = self.portal.portal_teams.p1['m1']
  >>> m1 = self.portal.portal_membership.getMemberById('m1')
  >>> m1path = '/'.join(m1.getPhysicalPath())
  >>> brain = self.portal.membrane_tool(path=m1path)[0]
  >>> set(m1.project_ids()) == set(brain.project_ids)
  True
  >>> reindex_membership_project_ids(mship, event=None)
  >>> # No change.
  >>> brain = self.portal.membrane_tool(path=m1path)[0]
  >>> set(m1.project_ids()) == set(brain.project_ids)
  True


Removing a member from portal_memberdata results in the member's home
folder being removed automatically as well. This is useful so we don't
have to remember to remove the member from 2 places when removing them
from the site.

(TODO: This test is destructive, if it's not run last in the layer,
 the deleted members won't exist for other suites in the same layer
 that might reasonably expect them. Needs better isolation.)

Remove a ``member1``::

  >>> self.loginAsPortalOwner()
  >>> 'm1' in self.portal.portal_memberdata.objectIds()
  True
  >>> 'm1' in self.portal.people.objectIds()
  True
  
Remove the ``m1`` member, which triggers an HTTP request to WP. This
should also remove him from the people folder, which we check below::

  >>> self.portal.portal_memberdata.manage_delObjects(['m1'])
  Called httplib2.Http.request(
      'http://nohost:wordpress/openplans-remove-user.php',
      'POST',
      body='username=m1...

``m1``'s home folder should be gone now as well::

  >>> print getattr(self.portal.people, 'm1', None)
  None
  >>> 'm1' in self.portal.portal_memberdata.objectIds()
  False

If we remove the ``m2`` member's people folder first, and then remove
the member from portal_memberdata, then it should fail silently::

  >>> self.portal.people.manage_delObjects(['m2'])
  >>> self.portal.portal_memberdata.manage_delObjects(['m2'])
  Called httplib2.Http.request(
      'http://nohost:wordpress/openplans-remove-user.php',
      'POST',
      body='username=m2...
