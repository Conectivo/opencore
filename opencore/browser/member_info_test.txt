-*- mode: doctest ;-*-

==============

opencore.nui.base
=================

    >>> view = BaseView(self.homepage, self.request)
    >>> view = view.__of__(self.homepage)  # portal home, not member home.

Member info - anonymous
-----------------------

    >>> self.logout()
    >>> view.loggedin
    False
    >>> print view.loggedinmember
    None
    >>> view.member_info_for_member(None)
    {}
    >>> view.member_info
    {}
    >>> view.inmember
    False


Member info - authenticated
-----------------------------


    >>> self.login('m1')
    >>> view.loggedin
    True
    >>> view.loggedinmember
    <OpenMember at /plone/portal_memberdata/m1>
    >>> print view.viewedmember()  # wrong context, so it's none.
    None
    >>> view.inmember
    False
    >>> view.memfolder()
    <ATFolder at /plone/people/m1>

    >>> pprint(view.member_info)
    {'affiliations': '',
     'anon_email': True,
     'background': '',
     'email': 'notreal1@example.com',
     'favorites': '',
     'folder_url': 'http://nohost/plone/people/m1',
     'fullname': 'Member One',
     'home_url': 'http://nohost/plone/people/m1/m1-home',
     'id': 'm1',
     'lastlogin': 'never',
     'location': '',
     'membersince': 'today',
     'portrait_thumb_url': '++resource++img/default-portrait-thumb.gif',
     'portrait_url': '++resource++img/default-portrait.gif',
     'portrait_width': '200',
     'projects': [...],
     'skills': '',
     'statement': '',
     'url': 'http://nohost/plone/people/m1',
     'website': ''}

We don't have a home page yet::

    >>> view.memhome_url()
    'http://nohost/plone/people/m1/m1-home'

If we get a view on the member area, inmember is true::

    >>> folder = view.memfolder()
    >>> view = BaseView(folder, self.request).__of__(folder)
    >>> view.inmember
    True
    >>> print view.viewedmember()
    <OpenMember at m1>

Ditto for viewing children of the member area::

    >>> homepage = view.memfolder()[view.memfolder().getDefaultPage()]
    >>> view = BaseView(homepage, self.request).__of__(homepage)
    >>> view.inmember
    True
    >>> print view.viewedmember()
    <OpenMember at m1>

Ditto for viewing the member itself::

    >>> user = view.viewedmember()
    >>> view = BaseView(user, self.request).__of__(user)
    >>> view.inmember
    True
    >>> print view.viewedmember()
    <OpenMember at m1>
