Javascript functionality for Vacuum
===================================


Logged out user:

    >>> self.logout()
    >>> jsview = portal.restrictedTraverse('@@user.js')
    >>> output = jsview()
    >>> print normalize_whitespace(output)
    OpenCore.prepareform({
    loggedin: false
    });



Logged in user:

    We want the member to have an email address::

    >>> member = portal.membrane_tool(getUserName='test_user_1_')[0].getObject()
    >>> member.setEmail('test_emailer_1_@example.com')

    I have no idea why this login view nonsense is necessary for the
    jsview test to work; I cargo-culted it from README.txt where these
    tests used to live. You'd think that self.login() would be enough,
    but it's evidently not.  - slinkp

    >>> view = portal.restrictedTraverse('@@login')
    >>> output = view()

Inject a mock configuration option for the vacuum_whitelist of allowed
hosts to redirect to::
    >>> from opencore.utility.interfaces import IProvideSiteConfig
    >>> from zope.component import getUtility
    >>> vacuum_whitelist = "http://vacuum.example.com,http://make.this.a.comma.separated.list"
    >>> getUtility(IProvideSiteConfig)._set(vacuum_whitelist)

    >>> jsview.request['HTTP_REFERER'] = "http://vacuum.example.com"
    >>> self.login()

    Finally, test the view::

    >>> output = jsview()
    >>> print normalize_whitespace(output)
    OpenCore.prepareform({
    loggedin: true,
    id: 'test_user_1_',
    name: '',
    profileurl: 'http://nohost/plone/people/test_user_1_/profile',
    memberurl: 'http://nohost/plone/people/test_user_1_',
    website: '',
    email: 'test_emailer_1_@example.com',
    topnav: '...http://nohost/plone/login...http://nohost/plone/join...'
    });

Test the logout javascript API:

    #######################################################
    #######################################################
    #
    #  These tests are currently disabled until we can
    #  figure out how to test logging in.
    #
    #######################################################
    #######################################################
    Use the form based login to not break things
    >>> self.logout()
    >>> from zope.component import getMultiAdapter
    >>> view = getMultiAdapter((portal, self.request), name='login')
    >>> view.request.form['__ac_name'] = 'm1'
    >>> view.request.form['__ac_password'] = 'testy'
    >>> output = view()

    Make sure we're currently logged in::

    Setup a view to be used to test whether or not the use is logged in
    >>> from opencore.browser.base import BaseView
    >>> lview = BaseView(self.homepage, self.request)
    >>> lview = view.__of__(self.homepage)

    >>> response = view.loggedin

    The logout API returns a comment without any useful JS
    >>> view = getMultiAdapter((portal, self.request), name='logout.js')
    >>> output = view()

    Make sure logout worked
    >>> response = lview.loggedin
